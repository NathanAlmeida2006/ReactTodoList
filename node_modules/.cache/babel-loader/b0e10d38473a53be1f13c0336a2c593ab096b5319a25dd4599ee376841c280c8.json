{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nathan.almeida\\\\Documents\\\\ReactTodoList\\\\src\\\\pages\\\\TaskDetails.jsx\",\n  _s = $RefreshSig$();\n// Importa os hooks e componentes necessários\nimport { useParams } from \"react-router-dom\"; // Hook para extrair parâmetros da URL\nimport { useTasks } from \"../context/TaskContext\"; // Hook personalizado para acessar o contexto de tarefas\nimport { CheckCircle, Clock, AlertCircle } from \"lucide-react\"; // Ícones do pacote Lucide React\nimport { Link } from \"react-router-dom\"; // Componente para navegação entre rotas\nimport \"../App.css\"; // Importa os estilos globais\n\n/**\r\n * Componente `TaskDetails` que exibe os detalhes de uma tarefa específica.\r\n * Este componente é renderizado quando o usuário acessa uma rota dinâmica (ex.: `/task/:id`).\r\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TaskDetails() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const {\n    tasks,\n    loadTasks\n  } = useTasks(); // Adicione loadTasks do contexto\n\n  // Carrega tarefas se o contexto estiver vazio\n  useEffect(() => {\n    if (tasks.length === 0) {\n      loadTasks();\n    }\n  }, []);\n\n  /**\r\n   * Encontra a tarefa correspondente ao ID extraído da URL.\r\n   * O ID da URL é convertido para string para garantir consistência na comparação.\r\n   */\n  const task = tasks.find(t => t.id.toString() === id);\n\n  /**\r\n   * Se a tarefa não for encontrada, exibe uma mensagem de erro com um ícone.\r\n   * Isso pode ocorrer se o ID na URL não corresponder a nenhuma tarefa existente.\r\n   */\n  if (!task) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n      size: 24,\n      className: \"icon-error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), \" Tarefa n\\xE3o encontrada\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n\n  /**\r\n   * Retorna o JSX com os detalhes da tarefa.\r\n   * A estrutura inclui o título, status, observação e um botão para voltar à página inicial.\r\n   */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"return-button-container\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        className: \"return-button\",\n        children: \"Voltar para Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-details\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Detalhes da Tarefa\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"T\\xEDtulo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \" \", task.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Status:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), \" \", task.completed ?\n        /*#__PURE__*/\n        // Se a tarefa estiver concluída, exibe um ícone de sucesso e o texto \"Concluída\"\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(CheckCircle, {\n            size: 18,\n            className: \"icon-completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), \" Conclu\\xEDda\"]\n        }, void 0, true) :\n        /*#__PURE__*/\n        // Se a tarefa estiver pendente, exibe um ícone de relógio e o texto \"Pendente\"\n        _jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Clock, {\n            size: 18,\n            className: \"icon-pending\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this), \" Pendente\"]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Observa\\xE7\\xE3o:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), \" \", task.observation ? task.observation : \"Nenhuma observação\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskDetails, \"XzIBqkwU4qdfeX814GbQcVq5xzU=\", false, function () {\n  return [useParams, useTasks];\n});\n_c = TaskDetails;\nvar _c;\n$RefreshReg$(_c, \"TaskDetails\");","map":{"version":3,"names":["useParams","useTasks","CheckCircle","Clock","AlertCircle","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskDetails","_s","id","tasks","loadTasks","useEffect","length","task","find","t","toString","className","children","size","fileName","_jsxFileName","lineNumber","columnNumber","to","title","completed","observation","_c","$RefreshReg$"],"sources":["C:/Users/nathan.almeida/Documents/ReactTodoList/src/pages/TaskDetails.jsx"],"sourcesContent":["// Importa os hooks e componentes necessários\r\nimport { useParams } from \"react-router-dom\"; // Hook para extrair parâmetros da URL\r\nimport { useTasks } from \"../context/TaskContext\"; // Hook personalizado para acessar o contexto de tarefas\r\nimport { CheckCircle, Clock, AlertCircle } from \"lucide-react\"; // Ícones do pacote Lucide React\r\nimport { Link } from \"react-router-dom\"; // Componente para navegação entre rotas\r\nimport \"../App.css\"; // Importa os estilos globais\r\n\r\n/**\r\n * Componente `TaskDetails` que exibe os detalhes de uma tarefa específica.\r\n * Este componente é renderizado quando o usuário acessa uma rota dinâmica (ex.: `/task/:id`).\r\n */\r\nexport default function TaskDetails() {\r\n  const { id } = useParams();\r\n  const { tasks, loadTasks } = useTasks(); // Adicione loadTasks do contexto\r\n\r\n  // Carrega tarefas se o contexto estiver vazio\r\n  useEffect(() => {\r\n    if (tasks.length === 0) {\r\n      loadTasks();\r\n    }\r\n  }, []);\r\n\r\n  /**\r\n   * Encontra a tarefa correspondente ao ID extraído da URL.\r\n   * O ID da URL é convertido para string para garantir consistência na comparação.\r\n   */\r\n  const task = tasks.find((t) => t.id.toString() === id);\r\n\r\n  /**\r\n   * Se a tarefa não for encontrada, exibe uma mensagem de erro com um ícone.\r\n   * Isso pode ocorrer se o ID na URL não corresponder a nenhuma tarefa existente.\r\n   */\r\n  if (!task)\r\n    return (\r\n      <div className=\"container\">\r\n        {/* Ícone de erro e mensagem indicando que a tarefa não foi encontrada */}\r\n        <AlertCircle size={24} className=\"icon-error\" /> Tarefa não encontrada\r\n      </div>\r\n    );\r\n\r\n  /**\r\n   * Retorna o JSX com os detalhes da tarefa.\r\n   * A estrutura inclui o título, status, observação e um botão para voltar à página inicial.\r\n   */\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Botão para voltar à página inicial */}\r\n      <div className=\"return-button-container\">\r\n        <Link to=\"/\" className=\"return-button\">\r\n          Voltar para Home\r\n        </Link>\r\n      </div>\r\n\r\n      {/* Container para os detalhes da tarefa */}\r\n      <div className=\"task-details\">\r\n        {/* Título da seção */}\r\n        <h2>Detalhes da Tarefa</h2>\r\n\r\n        {/* Exibe o título da tarefa */}\r\n        <p>\r\n          <strong>Título:</strong> {task.title}\r\n        </p>\r\n\r\n        {/* Exibe o status da tarefa com um ícone condicional */}\r\n        <p>\r\n          <strong>Status:</strong>{\" \"}\r\n          {task.completed ? (\r\n            // Se a tarefa estiver concluída, exibe um ícone de sucesso e o texto \"Concluída\"\r\n            <>\r\n              <CheckCircle size={18} className=\"icon-completed\" /> Concluída\r\n            </>\r\n          ) : (\r\n            // Se a tarefa estiver pendente, exibe um ícone de relógio e o texto \"Pendente\"\r\n            <>\r\n              <Clock size={18} className=\"icon-pending\" /> Pendente\r\n            </>\r\n          )}\r\n        </p>\r\n\r\n        {/* Exibe a observação da tarefa, ou uma mensagem padrão se não houver observação */}\r\n        <p>\r\n          <strong>Observação:</strong>{\" \"}\r\n          {task.observation ? task.observation : \"Nenhuma observação\"}\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}