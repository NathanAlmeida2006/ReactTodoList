{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nathan.almeida\\\\Documents\\\\ReactTodoList\\\\src\\\\components\\\\TaskItem.jsx\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\"; // Hook para gerenciar estado local\nimport { useTasks } from \"../context/TaskContext\"; // Hook personalizado para acessar o contexto de tarefas\nimport { Link } from \"react-router-dom\"; // Componente para navegação entre rotas\nimport { Save, Edit2, Trash2 } from \"lucide-react\"; // Ícones do pacote Lucide React\nimport \"../App.css\"; // Importa os estilos globais\n\n/**\r\n * Componente `TaskItem` que representa um item individual na lista de tarefas como um cartão.\r\n * Este componente permite visualizar, editar e excluir uma tarefa específica.\r\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TaskItem({\n  task\n}) {\n  _s();\n  const {\n    toggleComplete,\n    deleteTask,\n    editTask\n  } = useTasks();\n  const [isEditing, setIsEditing] = useState(false);\n  const [editedText, setEditedText] = useState(task.title);\n  const [editedObservation, setEditedObservation] = useState(task.observation || \"\");\n  const handleEdit = async () => {\n    if (isEditing) {\n      await editTask(task.id, {\n        title: editedText,\n        observation: editedObservation\n      });\n    }\n    setIsEditing(!isEditing);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `task-card ${task.completed ? \"completed\" : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      className: \"task-checkbox\",\n      checked: task.completed,\n      onChange: () => toggleComplete(task.id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-input\",\n        value: editedText,\n        onChange: e => setEditedText(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"form-input\",\n        value: editedObservation,\n        onChange: e => setEditedObservation(e.target.value),\n        placeholder: \"Descri\\xE7\\xE3o\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-content\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: `/task/${task.id}`,\n        className: \"task-title\",\n        children: task.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), task.observation && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"task-observation\",\n        children: task.observation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon-button\",\n        onClick: handleEdit,\n        children: isEditing ? /*#__PURE__*/_jsxDEV(Save, {\n          size: 18,\n          strokeWidth: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Edit2, {\n          size: 18,\n          strokeWidth: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"icon-button\",\n        onClick: () => deleteTask(task.id),\n        children: /*#__PURE__*/_jsxDEV(Trash2, {\n          size: 18,\n          strokeWidth: 2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskItem, \"5V8Nq/JS5th8viavc1Cy5IQj4Ms=\", false, function () {\n  return [useTasks];\n});\n_c = TaskItem;\nvar _c;\n$RefreshReg$(_c, \"TaskItem\");","map":{"version":3,"names":["useState","useTasks","Link","Save","Edit2","Trash2","jsxDEV","_jsxDEV","TaskItem","task","_s","toggleComplete","deleteTask","editTask","isEditing","setIsEditing","editedText","setEditedText","title","editedObservation","setEditedObservation","observation","handleEdit","id","className","completed","children","type","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","value","e","target","placeholder","to","onClick","size","strokeWidth","_c","$RefreshReg$"],"sources":["C:/Users/nathan.almeida/Documents/ReactTodoList/src/components/TaskItem.jsx"],"sourcesContent":["import { useState } from \"react\"; // Hook para gerenciar estado local\r\nimport { useTasks } from \"../context/TaskContext\"; // Hook personalizado para acessar o contexto de tarefas\r\nimport { Link } from \"react-router-dom\"; // Componente para navegação entre rotas\r\nimport { Save, Edit2, Trash2 } from \"lucide-react\"; // Ícones do pacote Lucide React\r\nimport \"../App.css\"; // Importa os estilos globais\r\n\r\n/**\r\n * Componente `TaskItem` que representa um item individual na lista de tarefas como um cartão.\r\n * Este componente permite visualizar, editar e excluir uma tarefa específica.\r\n */\r\nexport default function TaskItem({ task }) {\r\n  const { toggleComplete, deleteTask, editTask } = useTasks();\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [editedText, setEditedText] = useState(task.title);\r\n  const [editedObservation, setEditedObservation] = useState(\r\n    task.observation || \"\"\r\n  );\r\n\r\n  const handleEdit = async () => {\r\n    if (isEditing) {\r\n      await editTask(task.id, {\r\n        title: editedText,\r\n        observation: editedObservation,\r\n      });\r\n    }\r\n    setIsEditing(!isEditing);\r\n  };\r\n\r\n  return (\r\n    <div className={`task-card ${task.completed ? \"completed\" : \"\"}`}>\r\n      <input\r\n        type=\"checkbox\"\r\n        className=\"task-checkbox\"\r\n        checked={task.completed}\r\n        onChange={() => toggleComplete(task.id)}\r\n      />\r\n\r\n      {isEditing ? (\r\n        <div className=\"task-content\">\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-input\"\r\n            value={editedText}\r\n            onChange={(e) => setEditedText(e.target.value)}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-input\"\r\n            value={editedObservation}\r\n            onChange={(e) => setEditedObservation(e.target.value)}\r\n            placeholder=\"Descrição\"\r\n          />\r\n        </div>\r\n      ) : (\r\n        <div className=\"task-content\">\r\n          <Link to={`/task/${task.id}`} className=\"task-title\">\r\n            {task.title}\r\n          </Link>\r\n          {task.observation && (\r\n            <p className=\"task-observation\">{task.observation}</p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"task-actions\">\r\n        <button className=\"icon-button\" onClick={handleEdit}>\r\n          {isEditing ? (\r\n            <Save size={18} strokeWidth={2} />\r\n          ) : (\r\n            <Edit2 size={18} strokeWidth={2} />\r\n          )}\r\n        </button>\r\n        <button className=\"icon-button\" onClick={() => deleteTask(task.id)}>\r\n          <Trash2 size={18} strokeWidth={2} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}